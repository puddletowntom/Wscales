[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/screen.c.obj
In file included from C:/Espressif/frameworks/esp-idf-v5.0.1/Wscales/main/screen.c:14:
C:/Espressif/frameworks/esp-idf-v5.0.1/components/esp_lcd/include/esp_lcd_panel_rgb.h:15: warning: "SOC_LCD_RGB_SUPPORTED" redefined
   15 | #define SOC_LCD_RGB_SUPPORTED 1
      | 
In file included from C:/Espressif/frameworks/esp-idf-v5.0.1/components/esp_hw_support/include/esp_cpu.h:13,
                 from C:/Espressif/frameworks/esp-idf-v5.0.1/components/esp_hw_support/include/spinlock.h:11,
                 from C:/Espressif/frameworks/esp-idf-v5.0.1/components/freertos/FreeRTOS-Kernel/portable/xtensa/include/freertos/portmacro.h:74,
                 from C:/Espressif/frameworks/esp-idf-v5.0.1/components/freertos/FreeRTOS-Kernel/include/freertos/portable.h:58,
                 from C:/Espressif/frameworks/esp-idf-v5.0.1/components/freertos/FreeRTOS-Kernel/include/freertos/FreeRTOS.h:70,
                 from C:/Espressif/frameworks/esp-idf-v5.0.1/Wscales/main/screen.c:3:
C:/Espressif/frameworks/esp-idf-v5.0.1/components/soc/esp32s3/include/soc/soc_caps.h:239: note: this is the location of the previous definition
  239 | #define SOC_LCD_RGB_SUPPORTED           (1)  /*!< RGB LCD is supported */
      | 
[2/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/10] Linking C static library esp-idf\main\libmain.a
[4/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\Wscales\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Espressif/frameworks/esp-idf-v5.0.1/Wscales/build/bootloader/bootloader.bin"
Bootloader binary size 0x5180 bytes. 0x2e80 bytes (36%) free.
[5/8] Generating ld/sections.ld
[6/8] Linking CXX executable Wscales.elf
[7/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Espressif/frameworks/esp-idf-v5.0.1/Wscales/build/Wscales.bin
[8/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\Wscales\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.0.1/Wscales/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.0.1/Wscales/build/Wscales.bin"
Wscales.bin binary size 0x8a450 bytes. Smallest app partition is 0x300000 bytes. 0x275bb0 bytes (82%) free.
